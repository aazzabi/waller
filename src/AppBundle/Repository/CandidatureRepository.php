<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Candidature;
use AppBundle\Entity\Note;
use AppBundle\Entity\Action;
use AppBundle\Entity\Rapport;
use Symfony\Component\Form\Form;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;

use Symfony\Component\HttpFoundation\Request;
/**
 * CandidatureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CandidatureRepository extends \Doctrine\ORM\EntityRepository
{
    public function bindData($idSource, $idDestination,$rapportCommentaire, $candidature)
    {
        $action = $this->_em->getRepository(Action::class)->createQueryBuilder('a')
            ->where('a.etapeSource = :source and a.etapeDestination = :destination')
            ->setParameter('source', $idSource)
            ->setParameter('destination', $idDestination)
            ->getQuery()
            ->getOneOrNullResult();

        $rapport = new Rapport();
        $rapport->setCandidature($candidature);
        $rapport->setAction($action);
        $rapport->setLibelle($rapportCommentaire);

        $this->_em->persist($rapport);
    }

    public function updateNote($noteId, $noteCommentaire, $noteEvaluation)
    {
        $note = $this->_em->getRepository(Note::class)->find($noteId)
            ->setCommentaire($noteCommentaire)
            ->setEvaluation($noteEvaluation);

        $this->_em->persist($note);
    }

    public function setData(Form $form, Candidature $candidature)
    {
        $note = $this->_em->getRepository(Note::class)->createQueryBuilder('n')
            ->where('n.candidature = :candidature')
            ->setParameter('candidature', $candidature->getId())
            ->orderBy('n.id', 'desc')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();

        if ($note == null ||
            $note->getEtape()->getId() != $candidature->getCurrentEtape()->getId()
        ) {
            $note = new Note();
            $note->setCandidature($candidature)
                ->setEtape($candidature->getCurrentEtape());
            $this->_em->persist($note);
            $this->_em->flush();
        }

        $form->get('noteId')->setData($note->getId());
        $form->get('noteCommentaire')->setData($note->getCommentaire());
        $form->get('noteEvaluation')->setData($note->getEvaluation());


    }

}
